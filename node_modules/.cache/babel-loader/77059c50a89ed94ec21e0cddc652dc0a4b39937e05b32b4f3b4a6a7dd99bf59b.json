{"ast":null,"code":"// import HeaderCom from './components/HeaderCom'\nimport whiteSection from './components/whiteSection.vue';\nimport { useDark, useToggle, useColorMode } from '@vueuse/core';\nconst isDark = useDark(); // true or false\nconst colorMode = useColorMode({\n  modes: {\n    dim: 'dim',\n    cafe: 'cafe'\n  },\n  attribute: 'theme'\n}); // 'light' or 'dark'\nconst toggleDark = useToggle(isDark);\nexport default {\n  name: 'app',\n  components: {\n    whiteSection\n  },\n  data() {\n    return {\n      // mode:'light',\n    };\n  }\n\n  // methods:{\n  //   toggle(){\n  //     if(this.mode === 'dark'){\n  //       this.mode === 'light'\n  //       console.log(this.mode)\n  //     }else if(this.mode ==='light'){\n  //       this.mode ='dark'\n  //       console.log(this.mode)\n  //     }else{\n  //       this.mode ='dark'\n  //     }\n  //   }\n  // }\n};","map":{"version":3,"mappings":"AAgCA;AACA,OAAOA,YAAW,MAAO,+BAA8B;AACvD,SAASC,OAAO,EAAEC,SAAS,EAAEC,YAAW,QAAS,cAAc;AAC/D,MAAMC,MAAK,GAAIH,OAAO,EAAE,EAAE;AAC1B,MAAMI,SAAQ,GAAIF,YAAY,CAAC;EAC7BG,KAAK,EAAE;IACLC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE;AACb,CAAC,CAAC,EAAE;AACJ,MAAMC,UAAS,GAAIR,SAAS,CAACE,MAAM,CAAC;AAElC,eAAe;EACbO,IAAI,EAAC,KAAK;EACVC,UAAU,EAAC;IAACZ;EAAY,CAAC;EAEzBa,IAAI,GAAE;IACJ,OAAM;MACJ;IAAA,CAEF;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF","names":["whiteSection","useDark","useToggle","useColorMode","isDark","colorMode","modes","dim","cafe","attribute","toggleDark","name","components","data"],"sourceRoot":"","sources":["/Users/mac/Desktop/app-card/src/App.vue"],"sourcesContent":["<template>\n   \n  <!-- <section :class=\"mode\"> -->\n    \n    <section>\n      {{ colorMode }}\n  <button @click=\"colorMode = 'dark'\">Dark Mode</button>\n  <button @click=\"colorMode = 'light'\">Light Mode</button>\n  <button @click=\"colorMode = 'dim'\">Dim Mode</button>\n  <button @click=\"colorMode = 'cafe'\">Cafe Mode</button>\n    <div class=\"wrapper\">\n\n   <!-- <HeaderCom :mode=\"mode\" @toggle=\"toggle\" /> -->\n   \n   <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"box\" display=\"flex\" width=\"45\" height=\"45\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke=\"white\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n   <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n   <path d=\"M4 4m0 2a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2z\"></path>\n   <path d=\"M9 15v2\"></path>\n   <path d=\"M12 11v6\"></path>\n   <path d=\"M15 13v4\"></path>\n</svg>\n   \n \n    \n    <h1>Untercom <span>APP</span></h1>\n    <p>Convert your hottest leads</p>\n   </div>\n   <whiteSection/>\n  </section>\n</template>\n   \n<script>\n// import HeaderCom from './components/HeaderCom'\nimport whiteSection from './components/whiteSection.vue'\nimport { useDark, useToggle, useColorMode } from '@vueuse/core';\nconst isDark = useDark(); // true or false\nconst colorMode = useColorMode({\n  modes: {\n    dim: 'dim',\n    cafe: 'cafe',\n  },\n  attribute: 'theme',\n}); // 'light' or 'dark'\nconst toggleDark = useToggle(isDark);\n\n  export default {\n    name:'app',\n    components:{whiteSection},\n\n    data(){\n      return{\n        // mode:'light',\n      \n      }\n    },\n    \n    // methods:{\n    //   toggle(){\n    //     if(this.mode === 'dark'){\n    //       this.mode === 'light'\n    //       console.log(this.mode)\n    //     }else if(this.mode ==='light'){\n    //       this.mode ='dark'\n    //       console.log(this.mode)\n    //     }else{\n    //       this.mode ='dark'\n    //     }\n    //   }\n    // }\n  }\n\n</script>\n\n<style>\n.box{\n  margin: auto;\n  display: flex;\n}\nbody{\n  height:100vh;\n  margin: 0;\n}\n.dark{\n  background: #282828;\n  height: 100vh;\n}\nh1{\n  color:#ffffff;\n  text-align: center;\n  font-size: 25px;\n}\n.wrapper{\n  background: #3B81F6;\n  width:350px;\n  margin:0px auto 0px auto;\n  height:30vh;\n  padding-top: 20px;\n \n}\nh1 span{\n  background: blue;\n  padding: 10px;\n  border-radius:5px ;\n}\n.wrapper p{\n  color:#fff;\n  text-align: center;\n  padding-top: 15px;\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}